@use 'sass:math';
// #region @mixin

// 单行文本溢出
@mixin oneRowOverflow {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

// 多行文本溢出
@mixin multipleRowsOverflow($width:100%, $row:2) {
    width: $width;
    display: -webkit-box;
    overflow: hidden;
    -webkit-box-orient: vertical;
    word-break: break-all;
    text-overflow: ellipsis;
    -webkit-line-clamp: $row;
}

// 激活样式
@mixin activeColor($type) {
    @if $type=='yellow' {
        background-color: var(--yellow-color);
    }

    @else if $type=='pink' {
        background-color: var(--pink-color);
    }

    @else if $type=='green' {
        background-color: var(--green-color);
    }

    @else {
        color: var(--default-color);
    }

    font-size: var(--default-font-size);
}

// 弹性盒布局
@mixin flexLayout($justify:null, $align:null, $direction:null) {
    display: flex;

    @if $direction !=null {
        flex-direction: $direction;
    }

    @if $justify !=null {
        justify-content: $justify;
    }

    @if $align !=null {
        align-items: $align;
    }
}

// 字体设置
@mixin fontSetting($size:$default-font-size, $color:$default-color, $weight:400, $family:$default-font-family) {
    font-size: #{$size}rem;
    color:#{$color};
    font-weight:#{$weight};
    font-family: $family;
}

// 宽高
@mixin widthHeight($width:auto, $height:auto) {
    @if $width !=auto {
        @if not unitless($width) {
            width: $width;
        }

        @else {
            width: px2rem($width);
        }
    }

    @else {
        width: auto;
    }

    @if $height !=auto {
        @if not unitless($height) {
            height: $height;
        }

        @else {
            height: px2rem($height);
        }
    }

    @else {
        height: auto;
    }
}

// 居中图片
@mixin imgLayout($width:null) {
    @if $width !=null {
        @if not unitless($width) {
            width: px2rem($width);
        }

        @else {
            width: $width;
        }
    }

    @include flexLayout(center, center);
    overflow: hidden;

    img {
        font-size: px2rem(12);
        width: 100%;
        object-fit: fill
    }
}

@mixin myBorder($width, $color:#000) {
    border: px2rem($width) solid $color;
}

// scroll动画
@mixin scrollAnimation($start:0%, $middle:-25%, $end:-65%) {
    @keyframes scroll {
        0% {
            @if $start !=null {
                transform: translateY($start);
            }

            @else {
                transform: translateY(0%);
            }
        }

        50% {
            @if $middle !=null {
                transform: translateY($middle);
            }

            @else {
                transform: translateY(-25%);
            }
        }

        100% {
            @if $end !=null {
                transform: translateY($end);
            }

            @else {
                transform: translateY(-65%);
            }
        }
    }
}

// 滚动列表
@mixin scrollList($height, $duration:8) {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    padding: 0 px2rem(10);
    animation: scroll #{$duration}s infinite linear forwards;

    &:hover {
        animation-play-state: paused;
    }

    &>.item {
        @if $height !=null {
            height: px2rem($height);
        }

        @include flexLayout(space-between, center);
        padding: px2rem(5) 0;
        border-bottom: 1px solid var(--border-color);
    }
}

// 3列通用布局样式
@mixin systemLayout {
    @extend .wrapper;
    @include flexLayout(space-between);
    padding: 0 px2rem(10);

    .left,
    .center,
    .right {
        width: 29%;
        @include flexLayout(space-between, null, column);
        box-sizing: border-box;
    }

    .center {
        flex: 1;
        padding: 0 px2rem(10);

    }
}

// 绿色前缀标题
@mixin titleLayout {
    .title {
        @include flexLayout(null, center);
        font-size: $font-size-14;
        font-weight: 700;
        padding: px2rem(10) 0;

        &::before {
            content: '';
            display: block;
            height: px2rem(18);
            border-left: px2rem(4) solid var(--theme-color);
            padding: 0 px2rem(5);
        }
    }
}

// 媒体查询打印
@mixin notPrint {
    @media print {
        .not-print {
            display: none;
        }

        @page {
            size: A4 landscape;
            margin: 2cm;
        }

        @page {
            size: auto;
            margin: 0mm;
        }
    }
}

// 遮罩层样式
@mixin maskLayout($z-index:9) {
    .mask {
        position: absolute;
        @extend .wrapper;
        left: 0;
        right: 0;
        bottom: 0;
        top: 0;
        background: rgba(0, 0, 0, 0.6);
        z-index: $z-index;
    }
}

// tag
@mixin tagLayout($content:' ', $position:'after', $color:var(--theme-color), $border-color:var(--border-color), $font-size:$font-size-12) {
    &::#{$position} {
        content: $content;
        display: inline-block;
        width: fit-content;
        padding: px2rem(5) px2rem(10) px2rem(5) 0;
        margin: 0 px2rem(10);
        color: $color;
        background-color: $border-color;
        border-radius: px2rem(5);
        text-align: center;
        font-size: $font-size;
    }
}

// #endregion

// #region @function
/*
** @description 去除数值单位
** @param $px 带单位数值
** @return 不带单位数值
*/
@function stripUnits($target) {
    @return math.div($target, $target * 0 + 1);
}

/*
** @description px转rem
** @param $px 初始px单位大小
** @param $contxt 根字体大小
** @return rem单位大小
*/
@function px2rem($px, $contxt:$root-font-size) {
    @if not unitless($px) {
        $px: stripUnits($px);
    }

    @if not unitless($contxt) {
        $contxt: stripUnits($contxt)
    }

    // @return $px / $contxt * 1rem;
    @return calc($px / $contxt) * 1rem;
}

// #endregion